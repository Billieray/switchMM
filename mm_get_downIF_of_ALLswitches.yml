---
-   hosts: localhost
    gather_facts: no

    tasks:

    - name: get_device_IDs_from_PRIME_in_JSON
      uri:
        url: https://10.23.77.200/webacs/api/v4/data/InventoryDetails.json?
        validate_certs: no
        method: GET
        return_content: yes
        headers:
            Content-Type: "application/json"
        user: devnet
        password: Maticmind2018
        force_basic_auth: yes
      register: prime_devices

    - debug:
        var: prime_devices.content

    - name: parse the JSON output from CPI and save it in a new dictionary
      set_fact: 
         prime_devices_json: "{{prime_devices.content | from_json }}"

    - debug:
        msg: "{{prime_devices_json}}"

    - name: Get index of last device
      set_fact:
        Num_Of_Devices: "{{prime_devices_json['queryResponse']['@last']}}"

    - name: Create Array of URLs - one for each device
      set_fact:
        prime_device_urls: "{{prime_device_urls| default([]) + [item] }}"
      with_items: "{{prime_devices_json['queryResponse']['entityId']['@url'] | list}}"
    
    - debug:
            var: prime_device_urls

    - name: Let's get one URL
      set_fact:
        Device_URL: "{{prime_device_urls[0]['@url']}}"

    - debug:
            var: Device_URL


    - name: get_facts_from_device_IDs_from_PRIME
      uri:
        url: "{{ prime_device_urls[0]['@url'] }}"
        validate_certs: no
        method: GET
        return_content: yes
        headers:
            Content-Type: "application/json"
        user: devnet
        password: Maticmind2018
        force_basic_auth: yes
      register: device_facts_json

    - name: Show device facts
      debug:
        var: device_facts_json.content
    
#    - name: get_session_facts
#      uri:
#        url: https://10.23.77.200/webacs/api/v4/data/ClientSessions/{{highest_session_ID.entityId}}
#        validate_certs: no
#        method: GET
#        return_content: yes
#        headers:
#            Content-Type: "application/x-www-form-urlencoded"
#        user: devnet
#        password: Maticmind2018
#        force_basic_auth: yes
#      register: session_facts
#
#    - debug:
#        var: session_facts.content
#
#    - xml:
#        xmlstring: "{{session_facts.content}}"
#        xpath: /queryResponse/entity/clientSessionsDTO/deviceMgmtAddress/address
#        content: text
#      register: switch_IPaddress
#      
#    - name: get_switch_IPaddress
#      set_fact: 
#         switch_IP: "{{switch_IPaddress.matches.0.address}}"
#
#    - debug:
#        var: switch_IP
#
#    - xml:
#        xmlstring: "{{session_facts.content}}"
#        xpath: /queryResponse/entity/clientSessionsDTO/clientInterface
#        content: text
#      register: switch_If
#      
#    - name: get_switch_If
#      set_fact: 
#         switch_Interface: "{{switch_If.matches.0.clientInterface}}"
#
#    - debug:
#        var: switch_Interface
#
#    - xml:
#        xmlstring: "{{session_facts.content}}"
#        xpath: /queryResponse/entity/clientSessionsDTO/deviceName
#        content: text
#      register: switch_name
#      
#    - name: get_switch_hostname
#      set_fact: 
#         switch_hostname: "{{switch_name.matches.0.deviceName}}"
#
#    - debug:
#        var: switch_hostname
#
#
#-   hosts: MM_Vimodrone
#    gather_facts: no
#    connection: network_cli
#
#    vars:
#      ansible_network_os: ios
#
#    tasks:
#
#    - debug:
#       var: hostvars['localhost']['switch_Interface']
#
#    - ios_command:
#        commands:
#          - configure terminal
#          - interface {{hostvars['localhost']['switch_Interface']}}
#          - power inline never
#          - description {{username_mm}}
#          - end
#      when: ansible_host== hostvars['localhost']['switch_IP']
#
