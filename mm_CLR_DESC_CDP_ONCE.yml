---
-   hosts: localhost
    gather_facts: no

    vars:
       input_ipaddress: "10.22.22.69" 
    
    tasks:

    - name: get_device_ID_from_PRIME_in_JSON
      uri:
        url: https://10.23.77.200/webacs/api/v4/data/Devices.json?ipAddress={{input_ipaddress}}
        validate_certs: no
        method: GET
        return_content: yes
        headers:
            Content-Type: "application/json"
        user: devnet
        password: Maticmind2018
        force_basic_auth: yes
      register: device_ID

    - name: parse_deviceID
      set_fact: 
         deviceID_prime: "{{device_ID.content | from_json }}"
         
    - name: Clean Device URLs
      set_fact:
        Clean_Device_ID: "{{deviceID_prime['queryResponse']['entityId'][0]['$']}}"

#    - debug:
#            var: Clean_Device_ID

    - name: get_all_facts_from_selected_Device_from_PRIME
      uri:
        url: https://10.23.77.200/webacs/api/v4/data/InventoryDetails/{{Clean_Device_ID}}.json
        validate_certs: no
        method: GET
        return_content: yes
        headers:
            Content-Type: "application/json"
        user: devnet
        password: Maticmind2018
        force_basic_auth: yes
      register: device_facts

    - name: parse the JSON output from CPI and save it in a new dictionary
      set_fact: 
         device_facts_json: "{{device_facts.content | from_json }}"

    - name: get_Prod_Family
      set_fact:
            Prod_Family: "{{ device_facts_json.queryResponse.entity[0].inventoryDetailsDTO.summary.productFamily }}"

    - name: get_switch_IPaddress
      set_fact: 
         switch_IP: "{{device_facts_json.queryResponse.entity[0].inventoryDetailsDTO.summary.ipAddress}}"

    - name: get_list_of_CDP_Neighbours_if_Switch
      set_fact:
         CDP_Neighbours: "{{ device_facts_json['queryResponse']['entity'][0]['inventoryDetailsDTO']['cdpNeighbors']['cdpNeighbor'] }}"
      when: (Prod_Family == "Switches and Hubs")


-   hosts: MM_Vimodrone
    gather_facts: no
    connection: network_cli

    vars:
      ansible_network_os: ios

    tasks:

#    - set_fact: 
#         Prod_Type: "{{hostvars['localhost']['Prod_Family'] }}"

    - block:
        - ios_command:
            commands:
                - configure terminal
                - interface {{ item.nearEndInterface }}
                - description _NULL_
                - end
          with_items: "{{ hostvars['localhost']['CDP_Neighbours'] }}"
          when: item.neighborCapabilities != "Host Phone" and 
                (ansible_host== hostvars['localhost']['switch_IP'])
      when: hostvars['localhost']['Prod_Family'] == "Switches and Hubs"

#    - ios_command:
#        commands:
#          - configure terminal
#          - interface {{ item.nearEndInterface }}
#          - description _NULL_
#          - end
#      with_items: "{{ hostvars['localhost']['CDP_Neighbours'] }}"
#      when: item.neighborCapabilities != "Host Phone" and 
#            (ansible_host== hostvars['localhost']['switch_IP'])

