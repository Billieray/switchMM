---
-   hosts: localhost
    gather_facts: no

    tasks:

    - name: Check the associated device to a specific username
      uri:
        url: https://10.142.0.1:8443/emservice/EMServiceServlet
        validate_certs: no
        method: POST
        return_content: yes
        headers:
            Content-Type: "application/x-www-form-urlencoded"
        force_basic_auth: yes
        body: 'xml=%3cquery%3e%3cappInfo%3e%3cappID%3edevnet%3c%2fappID%3e%3cappCertificate%3edevnet%3c%2fappCertificate%3e%3c%2fappInfo%3e%3cuserDevicesQuery%3e%3cuserID%3e{{username_mm}}%3c%2fuserID%3e%3c%2fuserDevicesQuery%3e%3c%2fquery%3e'
      register: page_content

    - debug:
        var: page_content.content

    - xml:
        xmlstring: "{{page_content.content}}"
        xpath: /response/userDevicesResults/user/deviceName
        content: text
      register: phone_mac
      
    - name: get_mac_address
      set_fact: 
         mac_device: "{{phone_mac.matches.0.deviceName}}"

    - name: logout from the device
      uri:
        url: https://10.142.0.1:8443/emservice/EMServiceServlet
        validate_certs: no
        method: POST
        return_content: yes
        headers:
            Content-Type: "application/x-www-form-urlencoded"
        force_basic_auth: yes
        body: 'xml=%3crequest%3e%3cappInfo%3e%3cappID%3edevnet%3c%2fappID%3e%3cappCertificate%3edevnet%3c%2fappCertificate%3e%3c%2fappInfo%3e%3clogout%3e%3cdeviceName%3e{{mac_device}}%3c%2fdeviceName%3e%3c%2flogout%3e%3c%2frequest%3e'
      register: logout_result

    - debug:
        var: logout_result.content
 
    - name: get_clean_mac_address
      set_fact: 
         clean_mac: "{{ mac_device | regex_replace('SEP') }}"

    - debug:
        var: clean_mac

    - name: GET the highest session ID from CPI in JSON format
      uri:
        url: 'https://10.23.77.200/webacs/api/v4/data/ClientSessions.json?macAddress={{clean_mac}}&.sort=-id&.maxResults=1'
        validate_certs: no
        method: GET
        return_content: yes
        body_format: json
        headers:
            Content-Type: "application/json"
        user: devnet
        password: Maticmind2018
        force_basic_auth: yes
      register: prime_sessions

    - debug:
        var: prime_sessions.content
      

    - name: parse the JSON output from CPI and save it in a new dictionary
      set_fact: 
         prime_json: "{{prime_sessions.content | from_json }}"

    - debug:
        msg: "{{prime_json}}"
    
    - name: GET only the URL related to the highest session ID
      set_fact:
        prime_session_url: "{{prime_json['queryResponse']['entityId'][0]['@url']}}"
     
    - debug:
            var: prime_session_url

    - name: GET the detailed info of the highest session ID in JSON format
      uri:
        url: '{{prime_session_url}}.json'
        validate_certs: no
        method: GET
        return_content: yes
        body_format: json
        headers:
            Content-Type: "application/json"
        user: devnet
        password: Maticmind2018
        force_basic_auth: yes
      register: session_facts

    - debug:
        var: session_facts.content
    
    - name: parse the JSON output from CPI and save it in a new dictionary
      set_fact: 
         prime_json_session: "{{session_facts.content | from_json }}"

      
    - name: GET the switch MGMT IP Address
      set_fact: 
         switch_IP: "{{prime_json_session.queryResponse.entity.0.clientSessionsDTO.deviceMgmtAddress.address}}"

    - debug:
        var: switch_IP
      
    - name: GET the switch interface number
      set_fact: 
         switch_Interface: "{{prime_json_session.queryResponse.entity.0.clientSessionsDTO.clientInterface}}"

    - debug:
        var: switch_Interface
      
    - name: GET the switch hostname
      set_fact: 
         switch_hostname: "{{prime_json_session.queryResponse.entity.0.clientSessionsDTO.deviceName}}"

    - debug:
        var: switch_hostname


-   hosts: MM_Vimodrone
    gather_facts: no
    connection: network_cli

    vars:
      ansible_network_os: ios

    tasks:

    - debug:
       var: hostvars['localhost']['switch_Interface']

    - ios_command:
        commands:
          - configure terminal
          - interface {{hostvars['localhost']['switch_Interface']}}
          - no power inline never
          - description Porta Telefono + PC
          - end
      when: ansible_host== hostvars['localhost']['switch_IP']
